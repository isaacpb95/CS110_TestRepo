// THIS IS A TEXT FILE 
// COPY AND PASTE THIS CODE INTO YOUR COMPLILER TO MAKE CHANGES
// UPDATE THIS FILE WITH YOUR WORKING CODE

//MAKE NOTES OF WHAT YOU DO UP HERE PLS
// I completed the initilizeBoard function and the displayBoard function - Cayden
// Added #include <cstdlib>, function for coin toss - CoinFlip()
// also added a welcome screen as well as an optional function for RuleSet() to be displayed in
// the beginning. I also widened the board a bit. - Isaac
// Created DropPiece() function as well player 1 & 2 switch - Isaac

/****************************************************************
File: 
Description: Connect Four
Author: Cayden Harry, Isaac Plascencia-Barrigan
Class: CSCI - 110
Date: November 2024
I hereby certify that this program is entirely my own work.
*****************************************************************/

#include <cstdlib>
#include <iostream>
using namespace std;

const int ROWS = 6;
const int COLUMNS = 7;
char board[6][7]; // 6 x 7 array of chars 
unsigned int i;
unsigned int j;

void InitilizeBoard() {
    for (i = 0; i < 6; i++) {
        for (j = 0; j < 7; j++) {
            board[i][j] = ' '; // Delcares every char as empty 
        }
    }
    return;
}

void DisplayBoard() {
    // Labels each column 0 - 6
    for (i = 0; i <= 6; i++) {
        cout << "  " << i << " ";
    }
    cout << endl;

    // Displays the board
    for (i = 0; i < 6; i++) {
        cout << "| ";
        for (j = 0; j < 7; j++) {
            cout << board[i][j] << " | ";
        }
        cout << endl;
    }
    return;
}

void RuleSet() {
    cout << "1. Game Setup" << endl;
    cout << "   - The Connect Four board consists of a grid with seven columns and six rows." << endl;
    cout << "   - Players decide who will go first, often by a coin flip or mutual agreement." << endl;
    cout << "   - Each player chooses a color of disc, typically red and yellow, which distinguishes their moves, in this case it will be either X or O." << endl;
    cout << endl;
    cout << "2. Objective of the Game" << endl;
    cout << "   - The primary goal is to connect four of your discs in a straight line(vertically, horizontally, or diagonally) before your opponent does." << endl;
    cout << "   - The game ends as soon as a player achieves a line of four connected discs, or if the grid fills up with no winner, resulting in a draw." << endl;
    cout << endl;
    cout << "3. Gameplay" << endl;
    cout << "   - Turns: Players alternate turns. On each turn, a player drops one disc from the top of any of the seven columns." << endl;
    cout << "   - Column Capacity: Each column can hold up to six discs(one per row).Once a column is filled with six discs, no more discs can be dropped into that column." << endl;
    cout << endl;
    cout << "4. Winning Conditions" << endl;
    cout << "   - Four in a Row: A player wins by being the first to align four of their discs consecutively in one of the following ways:" << endl;
    cout << "   - Horizontally: Four discs in a straight line across any row." << endl;
    cout << "   - Vertically: Four discs in a straight line down any column." << endl;
    cout << "   - Diagonally: Four discs in a diagonal line, either from bottom - left to top - right or from bottom - right to top - left." << endl;
    cout << "   - Draw: If all columns are filled and no player has achieved a four - disc connection, the game ends in a draw." << endl;
    cout << endl;
    cout << "5. HAVE FUN!" << endl;
    return;
}

string CoinFlip() {
    int result = rand() % 2; // Generate either 0 or 1
    if (result == 1) {
        return "Heads";
    } else {
        return "Tails";
    }
}

bool DropPiece(char board[6][7], int column, char player) {
    for (i = ROWS; i >= 0; i--) {
        if (board[i][column] == ' ') {
            board[i][column] = player;
            return true;
        }
    }
    return false;
}


int main()
{
    char coinFlips;
    char rules;
    char symbol;
    int column;
    bool validMove;
    string currentPlayer;

    cout << "WELCOME TO CONNECT FOUR!" << endl;
    cout << endl << "Would you like to view the rule set?" << endl;
    cout << "Y / N: ";
    cin >> rules;
    cout << endl;
    if (rules == 'Y' || rules == 'y') {
        RuleSet();
        cout << endl;
        cout << "Enter '0' for the coin toss!" << endl;
        cout << "Choose who will be Heads and who will be Tails." << endl;
        cout << "Good Luck!" << endl;
    }
    if (rules != 'Y' && rules != 'y') {
        cout << endl;
        cout << "Enter '0' for the coin toss!" << endl;
        cout << "Choose who will be Heads and who will be Tails." << endl;
        cout << "Good Luck!" << endl;
    }
    cout << endl;
    cin >> coinFlips;
    cout << endl;
    srand(2); // Set seed for random number generator

    if (coinFlips == '0') {
        for (i = 0; i < 1; ++i) {
            cout << CoinFlip() << endl << endl;
        }
    }
    while (coinFlips != '0') {
        cout << "Enter 0: ";
        cin >> coinFlips;
        if (coinFlips == '0') {
            for (i = 0; i < 1; ++i) {
                cout << endl << CoinFlip() << endl << endl;
            }
        }
    }

    currentPlayer = "Player 1";
    symbol = 'X';

    cout << "Ready!" << endl << endl;
    InitilizeBoard();

    while (coinFlips == '0') {    
        DisplayBoard();
        cout << currentPlayer << "'s turn. Enter a column (0-6): ";
        cin >> column;
        cout << endl;
        bool proceed = true;

        if (column < 0 || column >= COLUMNS) {  // Invalid column input
            cout << "Invalid column. Try again." << endl;
            proceed = false;
        }
        else if (!(validMove = DropPiece(board, column, symbol))) {  // Column is full
            cout << "Column is full. Try another column." << endl;
            proceed = false;
        }
        
        // Switch player
        if (symbol == 'X') {
            symbol = 'O';
            currentPlayer = "Player 2";
        }
        else {
            symbol = 'X';
            currentPlayer = "Player 1";
        }
    }
    



    return 0;
}
